# Создайте модуль с функцией внутри.
# Функция получает на вход загадку, список с возможными вариантами отгадок
# и количество попыток на угадывание.
# Программа возвращает номер попытки, с которой была отгадана загадка или ноль, если попытки исчерпаны.

# Добавьте в модуль с загадками функцию, которая хранит словарь списков.
# Ключ словаря - загадка, значение - список с отгадками.
# Функция в цикле вызывает загадывающую функцию, чтобы передать ей все свои загадки.

# Добавьте в модуль с загадками функцию, которая принимает на вход строку (текст загадки)
# и число (номер попытки, с которой она угадана).
# Функция формирует словарь с информацией о результатах отгадывания.
# Для хранения используйте защищённый словарь уровня модуля.
# Отдельно напишите функцию, которая выводит результаты угадывания
# из защищённого словаря в удобном для чтения виде.
# Для формирования результатов используйте генераторное выражение.

RIDDLE_DICT = {"Этот рыжий господин - вскусный, сладкий...": ["апельсин", "мандарин"],
               "Бегут полоски, загнув носки": ["лыжи"],
               "Зимой и летом одним цветом": ["елка", "ель", "сосна", "пихта", "туя"],
               "Мягки лапки, а в лапках царапки": ["кошечка", "кошка", "кот"]}

RIDDLE = ""


def guess_the_riddle(riddle: str, answers: list, tries: int = 4):
    print(riddle)
    for i in range(1, tries + 1):
        my_try = input("Ваш ответ: ")
        if my_try in answers:
            return i
    return 0


def cycle_of_riddles(my_dict):
    for key, value in my_dict.items():
        if guess_the_riddle(key, value):
            print("Угадали!")
        else:
            print("Увы :(")


def quantity_tries(riddle: str, numb_try: int):
    return {riddle: numb_try}


for key, item in RIDDLE_DICT.items():
    numb_try = guess_the_riddle(key, item)
    _DICT_TRIES = quantity_tries(key, numb_try)

# if __name__ == "__main__":
#     def print_result(my_dict):
# print[key, value for key, value in my_dict.items()]


cycle_of_riddles(RIDDLE_DICT)
